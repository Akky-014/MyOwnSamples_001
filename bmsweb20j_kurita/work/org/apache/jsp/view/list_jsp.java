/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.32
 * Generated at: 2019-03-20 04:44:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import bean.Book;
import util.MyFormat;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/common/header.jsp", Long.valueOf(1552975241273L));
    _jspx_dependants.put("/common/footer.jsp", Long.valueOf(1552971560117L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("bean.Book");
    _jspx_imports_classes.add("util.MyFormat");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

MyFormat myf = new MyFormat();

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t<title>list</title>\r\n");
      out.write("\t</head>\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<h1 align=\"center\">書籍管理システムweb版ver.2.0</h1>\r\n");
      out.write("\t\t<hr align=\"center\" size=\"5\" color=\"blue\" width=\"1650\">\r\n");
      out.write("\r\n");
      out.write("\t<table align=\"center\" width=\"1550\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td width=\"80\">[<a href=\"");
      out.print(request.getContextPath() );
      out.write("/view/menu.jsp\">メニュー</a>]</td>\r\n");
      out.write("\t\t\t<td width=\"80\">[<a href=\"");
      out.print(request.getContextPath() );
      out.write("/view/insert.jsp\">書籍登録</a>]</td>\r\n");
      out.write("\t\t\t<td width=\"508\" align=\"center\" ><font size=\"5\">書籍一覧</font></td>\r\n");
      out.write("\t\t\t<td width=\"80\">&nbsp;</td>\r\n");
      out.write("\t\t\t<td width=\"80\">&nbsp;</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\r\n");
      out.write("\t<hr align=\"center\" size=\"2\" color=\"black\" ></hr>\r\n");
      out.write("\r\n");
      out.write("\t<table align=\"center\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<form action=\"");
      out.print(request.getContextPath());
      out.write("/search\">\r\n");
      out.write("\t\t\t\t\tisbn：<input type=text size=\"30\" name=\"isbn\"></input>\r\n");
      out.write("\t\t\t\t\ttitle：<input type=text size=\"30\" name=\"title\"></input>\r\n");
      out.write("\t\t\t\t\t価格：<input type=text size=\"30\" name=\"price\"></input>\r\n");
      out.write("\t\t\t\t\t<input type=\"submit\" name=\"search\" value=\"検索\"></input>\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t<form action=\"");
      out.print(request.getContextPath());
      out.write("/list\">\r\n");
      out.write("\t\t\t<input type=\"submit\" name=\"searchall\" value=\"全件表示\"></input>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\r\n");
      out.write("\t<table align=\"center\" width=\"1500\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th bgcolor=\"#6666ff\" >isbn</th>\r\n");
      out.write("\t\t\t<th bgcolor=\"#6666ff\" >title</th>\r\n");
      out.write("\t\t\t<th bgcolor=\"#6666ff\" >価格</th>\r\n");
      out.write("\t\t\t<th bgcolor=\"#6666ff\" colspan=\"3\">変更/削除/カートに入れる</th>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t");

		ArrayList<Book> list =(ArrayList<Book>)request.getAttribute("book_list");
		if(list != null){
			for(int i=0;i<list.size();i++){
				Book books = (Book)list.get(i);
		
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td align=\"center\" ><a href=\"");
      out.print(request.getContextPath() );
      out.write("/detail?isbn=");
      out.print(books.getIsbn());
      out.write("&cmd=detail\">");
      out.print(books.getIsbn());
      out.write("</a></td>\r\n");
      out.write("\t\t\t<td align=\"center\" >");
      out.print(books.getTitle());
      out.write("</td>\r\n");
      out.write("\t\t\t<td align=\"center\" >");
      out.print(myf.moneyFormat(books.getPrice()));
      out.write("</td>\r\n");
      out.write("\t\t\t<td align=\"center\" >\r\n");
      out.write("\t\t\t\t<a href=\"");
      out.print(request.getContextPath() );
      out.write("/detail?isbn=");
      out.print(books.getIsbn());
      out.write("&cmd=update\">変更</a>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t\t\t<td align=\"center\" >\r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/delete?isbn=");
      out.print(books.getIsbn());
      out.write("\">削除</a>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t<td align=\"center\" >\r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/insertIntoCart?isbn=");
      out.print(books.getIsbn());
      out.write("\">カートに入れる</a>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");

				}
			}else{
			
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td align=\"center\" width=\"200\">&nbsp;</td>\r\n");
      out.write("\t\t\t\t<td align=\"center\" width=\"200\">&nbsp;</td>\r\n");
      out.write("\t\t\t\t<td align=\"center\" width=\"200\">&nbsp;</td>\r\n");
      out.write("\t\t\t\t<td align=\"center\" width=\"250\" colspan=\"2\">&nbsp;</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");

			}
			
      out.write("\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t<br><br><br><br><br><br><br><br><br><br>\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<hr align=\"center\" size=\"5\" color=\"blue\" width=\"1650\">\r\n");
      out.write("\t\t<table border=0  width=\"950\" summary=\"フッター表示\">\r\n");
      out.write("\t\t\t<tr><td>copyright (c) 2019 all rights reserved.</td></tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
